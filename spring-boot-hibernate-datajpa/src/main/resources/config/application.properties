## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "mytestdb" as database name and 
# "root" as username and "1111" as password.
# For UTF-8 language support: useUnicode=yes&characterEncoding=utf8&characterResultSets=utf8
spring.datasource.url = jdbc:mysql://localhost:3306/mytestdb?useSSL=false&useUnicode=yes&characterEncoding=utf8&characterResultSets=utf8
spring.datasource.username = root
spring.datasource.password = 1111

spring.flyway.url = ${spring.datasource.url}
spring.flyway.user = ${spring.datasource.username}
spring.flyway.password = ${spring.datasource.password}

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
#spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
# For creating table by default engine set: MySQL5Dialect  
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

## Disable HAL as default JSON media type
spring.hateoas.use-hal-as-default-json-media-type=false

# AWS
aws.access-key = AKIAJHJF74UFM3LM2WCA
aws.secret-key = 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
aws.s3.region = us-east-1
aws.s3.bucket = ratul-test
aws.s3.presigned.expiration = 10

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
## Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
file.upload-dir=./uploads

## Mail Settings
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ratulprojectinfo
spring.mail.password=projectinfo
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000
#spring.mail.properties.mail.smtp.ssl.enable=true
#spring.mail.properties.mail.debug=true

##Token Service
auth.endpoint.check-token = http://localhost:8081/oauth/check_token
auth.client-id = postman-client
auth.client-secret = 1234
auth.swagger.endpoint = http://localhost:8081
auth.swagger.client-id = swagger-client
auth.swagger.client-secret = 1234
auth.jdbc.driverClassName=com.mysql.jdbc.Driver
auth.jdbc.url = jdbc:mysql://localhost:3306/myauthdb?useSSL=false
auth.jdbc.username = root
auth.jdbc.password = 1111
